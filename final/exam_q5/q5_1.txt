1.
Because MutexGuard doesn't implement the 'Send" trait. This means it cannot 
be send into another thread safely.

2.
use std::thread;
use std::sync::{Mutex, Arc};

fn main() {
    let mutex: Arc<Mutex<i32>> = Arc::new(Mutex::new(0));

    thread::scope(|scope| {
        for _ in 0..3 {
            let mutex = mutex.clone();
            scope.spawn(move || {
                let mut i = mutex.lock().unwrap();
                *i += 1;
            });
        }
    });

    println!("{}", *mutex.lock().unwrap());
}

3.
The Arc implemented the 'Send' trait. So the item wrapped inside can be send 
into thread safely.